services:
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.109.0
    container_name: otel_collector_atlas
    # build: ./otel_image
    ports:
      - "4317:4317" # OTLP gRPC receiver
      - "55680:55680" # OTLP HTTP receiver
      - "8888:8888" # Prometheus metrics exposed by the collector
      - "13133:13133" # Health check endpoint
      - "55679:55679" # zPages
    volumes:
      - ./src/otel_collector/otel-collector-config.yaml:/etc/otel/config.yaml
    command:
      - "--config=/etc/otel/config.yaml"
    profiles: [otel]


# Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus_atlas
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus-config.yaml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --enable-feature=exemplar-storage
      - --enable-feature=otlp-write-receiver
    volumes:
      - ./src/prometheus/prometheus-config.yaml:/etc/prometheus/prometheus-config.yaml
    deploy:
      resources:
        limits:
          memory: 300M
    restart: unless-stopped
    ports:
      - "9090:9090"
    profiles: [prom]

# Grafana
  grafana:
    image: grafana/grafana:11.2.0
    container_name: grafana
    ports:
      - "3000:3000" # Grafana UI
    deploy:
      resources:
        limits:
          memory: 100M
    restart: unless-stopped
    volumes:
      - ./src/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./src/grafana/provisioning/:/etc/grafana/provisioning/
    profiles: [prom]
  

